@using Frontend.Services
@using Shared.Models
@page "/projects/{id}"
@inject HttpService _httpService
@inject NavigationManager _navigator

<div id="container">
    <div class="project">
        @if (_project != null)
        {
            if (_project.Images != null)
            {
                <ImagesCarousel Images="_project.Images" />
            }
            <h1>@_project.Name</h1>
            <p>@_project.Description</p>
        }
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; } = null!;
    private Project? _project;

    protected override async Task OnParametersSetAsync()
    {
        var projectDto = await _httpService.GetProjectAsync(Id);
        if (projectDto == null)
        {
            _navigator.NavigateTo("/");
            return;
        }
        _project = new Project
            {
                Name = projectDto.Name,
                Description = projectDto.Description
            };

        await SetThumbnailAsync(projectDto.ThumbnailId);
        if (projectDto.ImageIds != null)
            await SetImagesAsync(projectDto.ImageIds);
    }

    private async Task SetThumbnailAsync(string thumbnailId)
    {
        if (_project == null)
            return;

        var thumbnail = await _httpService.GetImageAsync(thumbnailId);
        _project.Thumbnail = thumbnail;
    }

    private async Task SetImagesAsync(IEnumerable<string> imageIds)
    {
        if (_project == null)
            return;

        _project.Images = [];

        foreach (var id in imageIds)
        {
            var image = await _httpService.GetImageAsync(id);
            if (image != null)
                _project.Images.Add(image);
        }
    }
}