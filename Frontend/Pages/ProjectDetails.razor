@using Frontend.Services
@using Shared.Models
@page "/projects/{id}"
@inject HttpService _httpService
@inject NavigationManager _navigator
@inject IJSRuntime _jSRuntime

<div class="project">
    @if (_project != null)
    {
        if (_project.ImageIds != null)
        {
            <div id="display">
                <ImagesCarousel ImageIds="@_project.ImageIds" />
            </div>
        }
        <h1 id="title">@_project.Name</h1>
        <div id="text">
            <p id="description" @ref="_description"></p>
            <div id="more-info">
                @if (_project.Github != string.Empty)
                {
                    <h2>Checkout:</h2>
                    <label for="github">Github:</label>
                    <a id="github" href="@_project.Github">@_project.Github</a>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; } = null!;
    private ProjectDto? _project;
    private ElementReference _description;

    protected override async Task OnParametersSetAsync()
    {
        _project = await _httpService.GetProjectAsync(Id);
        if (_project == null)
        {
            _navigator.NavigateTo("/");
            return;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_project != null)
            await _jSRuntime.InvokeVoidAsync("setInnerHtml", _description, _project.Description);
    }
}