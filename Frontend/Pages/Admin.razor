@page "/admin"
@using System.Text.Json
@using System.Text
@using System.Net.Http.Headers
@inject HttpClient HttpClient
@inject IJSRuntime JS
@inject NavigationManager Navigator

<div id="login-form">
    @if (_wrongCredentials)
    {
        <p class="error-message">Wrong username or password.</p>
    }
    <label for="username">Username:</label>
    <input type="text" name="username" id="username" @bind-value="_username">
    <label for="password">Password:</label>
    <input type="password" name="password" id="password" @bind-value="_password">
    <button @onclick="Login">Login</button>
</div>


@code
{
    private string _username = string.Empty;
    private string _password = string.Empty;
    private bool _wrongCredentials = false;

    protected override async Task OnInitializedAsync()
    {
        var token = await JS.InvokeAsync<string?>("getToken");
        if (token != string.Empty && token != null)
        {
            Navigator.NavigateTo("/");
        }
    }

    private async Task Login()
    {
        if (_username == string.Empty || _password == string.Empty)
            return;

        string json = JsonSerializer.Serialize(new
        {
            username = _username,
            password = _password
        });

        using StringContent jsonContent = new(json, Encoding.UTF8, "application/json");

        var request = new HttpRequestMessage(HttpMethod.Post, "/login");
        request.SetBrowserRequestCredentials(BrowserRequestCredentials.Include);
        request.Content = jsonContent;

        var response = await HttpClient.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            token = token.Replace(@"""", "");
            await JS.InvokeVoidAsync("storeToken", token);
            Navigator.NavigateTo("/dashboard");
        }
        else
        {
            _wrongCredentials = true;
            _password = string.Empty;
        }
    }
}
