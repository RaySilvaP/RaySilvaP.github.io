@page "/projects/storagemanager"
@using Shared.Models
@inject IJSRuntime _jS

<div class="project">
    <h1 id="title">@_project.Name</h1>
    <div id="display">
        @* <ImagesCarousel ImageIds="@_project.ImageIds" /> *@
    </div>
    <div id="text" class="commom-text">
        <p id="description" @ref="_description"></p>
        <div id="more-info">
            @if (_project.Github != string.Empty)
            {
                <h2>Checkout:</h2>
                <label for="github">Github:</label>
                <a id="github" href="@_project.Github">@_project.Github</a>
            }
        </div>
    </div>
</div>

@code
{
    private Project _project = null!;
    private ElementReference _description;

    protected override void OnInitialized()
    {
        SetProject();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_project != null)
            await _jS.InvokeVoidAsync("setInnerHtml", _description, _project.Description);
    }

    private void SetProject()
    {
        _project = new()
            {
                Name = "Storage Manager",
                Description =
            @"
<h2 class=""important-text"">Introduction</h2>
<p>My objective was to make a mobile app for managing the storage of an small tire shop, also
the app should be simple and easy to use.
I used .NET MAUI Blazor hybrid app project template, so I could use my HTML and CSS knowledge with C# to make a mobile
app without having to take much time learning other technologies.</p>

<h2 class=""important-text"">Data Storage - SQLite</h2>
<p>Choosing how to store the data was not easy at first though, I tried to use MongoDB, but
was not fitting well with the application due to its complexity and dependency on internet, after some time searching I
manage to find a solution, SQLite. It was perfect, I could have an Database locally on the device, erasing the need of
internet, making the application simple and still been easy to manage the data with a ORM. The implementation was not
that hard too, happily there were some good libraries that make compatible SQLite for my mobile app development
setup.</p>

<h2 class=""important-text"">App features:</h2>
<ul>
<li>Create a product;</li>
<li>Delete a product;</li>
<li>Edit a product;</li>
<li>Regist a purchase;</li>
<li>Regist a sale;</li>
<li>See statistics of product flow;</li>
<li>See mouth profit history.</li>
</ul>"
            };
    }
}