@using Shared.Models
@using Frontend.Services
@inherits ComponentBase
@inject NavigationManager _navigator
@inject HttpService _httpService

<h3>Projects</h3>
@if (_items != null)
{
    <ol class="project-display">
        @foreach (var item in _items)
        {
            <li class="project-display-item" @onclick="() => NavigateToDetails(item.Id)">
                <ImageAsync ImageId="@item.ThumbnailId" />
                <div class="project-display-item-body">
                    <span class="project-display-item-title">@item.Name</span>
                    <span class="project-display-item-description">@item.ShortDescription</span>
                </div>
            </li>
        }
    </ol>
    if (_totalPages > 1)
    {
        <div class="project-display-footer">
            <Pagination TotalPages="_totalPages" ActivePageNumber="@_currentPageNumber" DisplayPages="5"
                PageChanged="OnPageChangedAsync" />
        </div>
    }
}
else
{
    <span>No projects... :(</span>
}

@code {
    private List<ProjectDto>? _items;
    private int _totalPages = 0, _currentPageNumber = 1;

    protected override async Task OnInitializedAsync()
    {
        (_totalPages, _items) = await _httpService.GetProjectsAsync(_currentPageNumber);
    }

    private async Task OnPageChangedAsync(int newPageNumber)
    {
        _currentPageNumber = newPageNumber;
        _items!.Clear();
        (_totalPages, _items) = await _httpService.GetProjectsAsync(_currentPageNumber);
    }

    private void NavigateToDetails(string id)
    => _navigator.NavigateTo($"/projects/{id}");
}